// <auto-generated />
using System;
using EasyMicroservices.SMSMicroservice.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyMicroservices.SMSMicroservice.Migrations
{
    [DbContext(typeof(SMSContext))]
    partial class SMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.ApiUserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApiUsers");
                });

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.ManyToMany.MessageSenderTextMessageEntity", b =>
                {
                    b.Property<long>("TextMessageId")
                        .HasColumnType("bigint");

                    b.Property<long>("MessageSenderId")
                        .HasColumnType("bigint");

                    b.HasKey("TextMessageId", "MessageSenderId");

                    b.HasIndex("MessageSenderId");

                    b.ToTable("MessageSenderTextMessages");
                });

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.MessageSenderEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ApiUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApiUserId");

                    b.ToTable("MessageSenders");
                });

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.TextMessageEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ApiUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("VARCHAR(24)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToPhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApiUserId");

                    b.ToTable("TextMessages");
                });

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.ManyToMany.MessageSenderTextMessageEntity", b =>
                {
                    b.HasOne("EasyMicroservices.SMSMicroservice.Database.Entities.MessageSenderEntity", "MessageSender")
                        .WithMany("MessageSenderTextMessages")
                        .HasForeignKey("MessageSenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EasyMicroservices.SMSMicroservice.Database.Entities.TextMessageEntity", "TextMessage")
                        .WithMany("MessageSenderTextMessages")
                        .HasForeignKey("TextMessageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MessageSender");

                    b.Navigation("TextMessage");
                });

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.MessageSenderEntity", b =>
                {
                    b.HasOne("EasyMicroservices.SMSMicroservice.Database.Entities.ApiUserEntity", "ApiUser")
                        .WithMany("MessageSenders")
                        .HasForeignKey("ApiUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApiUser");
                });

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.TextMessageEntity", b =>
                {
                    b.HasOne("EasyMicroservices.SMSMicroservice.Database.Entities.ApiUserEntity", "ApiUser")
                        .WithMany("TextMessages")
                        .HasForeignKey("ApiUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApiUser");
                });

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.ApiUserEntity", b =>
                {
                    b.Navigation("MessageSenders");

                    b.Navigation("TextMessages");
                });

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.MessageSenderEntity", b =>
                {
                    b.Navigation("MessageSenderTextMessages");
                });

            modelBuilder.Entity("EasyMicroservices.SMSMicroservice.Database.Entities.TextMessageEntity", b =>
                {
                    b.Navigation("MessageSenderTextMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
